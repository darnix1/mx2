#!/bin/bash

# Función para enviar el log de Telegram
function send-log(){
    CHATID=$(grep -E "^#bot# " "/etc/bot/.bot.db" | cut -d ' ' -f 3)
    KEY=$(grep -E "^#bot# " "/etc/bot/.bot.db" | cut -d ' ' -f 2)
    TIME="10"
    URL="https://api.telegram.org/bot$KEY/sendMessage"
    CURRENT_TIME=$(date "+%Y-%m-%d %H:%M:%S")
    TEXT="
    <code>────────────────────</code>
    <b>⚠️NOTIF QUOTA HABIS XRAY VMESS⚠️</b>
    <code>────────────────────</code>
    <code>Username  : </code><code>$user</code>
    <code>limit Quota: </code><code>$total2</code>
    <code>Usage     : </code><code>$total</code>
    <code>Time      : </code><code>$CURRENT_TIME</code>
    <code>────────────────────</code>
    "
    curl -s --max-time $TIME -d "chat_id=$CHATID&disable_web_page_preview=1&text=$TEXT&parse_mode=html" $URL >/dev/null
}

# Función para convertir bytes a unidades de tamaño
function con() {
    local bytes=$1
    if [[ $bytes -lt 1024 ]]; then
        echo "${bytes} B"
    elif [[ $bytes -lt 1048576 ]]; then
        awk "BEGIN {printf \"%.2f KB\", $bytes/1024}"
    elif [[ $bytes -lt 1073741824 ]]; then
        awk "BEGIN {printf \"%.2f MB\", $bytes/1048576}"
    else
        awk "BEGIN {printf \"%.2f GB\", $bytes/1073741824}"
    fi
}

# Función para convertir texto con MB, GB, etc., a bytes
function convert_to_bytes() {
    local value=$(echo "$1" | sed 's/[^0-9\.]//g')
    local unit=$(echo "$1" | sed 's/[0-9\.]//g' | tr '[:lower:]' '[:upper:]')

    case "$unit" in
        B|"")
            echo $((value))
            ;;
        KB)
            echo $(awk "BEGIN {printf \"%.0f\", $value * 1024}")
            ;;
        MB)
            echo $(awk "BEGIN {printf \"%.0f\", $value * 1024 * 1024}")
            ;;
        GB)
            echo $(awk "BEGIN {printf \"%.0f\", $value * 1024 * 1024 * 1024}")
            ;;
        *)
            echo "0"
            ;;
    esac
}

# Loop infinito para verificar el tráfico de los usuarios
while true; do
    sleep 5
    data=($(cat /etc/xray/config.json | grep '^###' | cut -d ' ' -f 2 | sort | uniq))
    
    mkdir -p /etc/limit/vmess
    
    # Verifica el tráfico de cada usuario
    for user in ${data[@]}; do
        xray api stats --server=127.0.0.1:10085 -name "user>>>${user}>>>traffic>>>downlink" >& /tmp/${user}
        getThis=$(cat /tmp/${user} | awk '{print $1}')
        
        if [[ ${getThis} != "failed" ]]; then
            downlink=$(xray api stats --server=127.0.0.1:10085 -name "user>>>${user}>>>traffic>>>downlink" | grep -w "value" | awk '{print $2}' | cut -d '"' -f2)
            
            if [ -e /etc/limit/vmess/${user} ]; then
                plus2=$(cat /etc/limit/vmess/${user})
                if [[ ${#plus2} -gt 0 ]]; then
                    plus3=$((downlink + plus2))
                    echo "${plus3}" > /etc/limit/vmess/"${user}"
                else
                    echo "${downlink}" > /etc/limit/vmess/"${user}"
                fi
            else
                echo "${downlink}" > /etc/limit/vmess/"${user}"
            fi

            xray api stats --server=127.0.0.1:10085 -name "user>>>${user}>>>traffic>>>downlink" -reset > /dev/null 2>&1
        fi
    done

    # Verifica si el tráfico de un usuario ha excedido su cuota
    for user in ${data[@]}; do
        if [ -e /etc/vmess/${user} ]; then
            checkLimitRaw=$(cat /etc/vmess/${user})
            checkLimit=$(convert_to_bytes "$checkLimitRaw")

            if [[ ${#checkLimit} -gt 1 && -e /etc/limit/vmess/${user} ]]; then
                Usage=$(cat /etc/limit/vmess/${user})
                total=$(con ${Usage})
                total2=$(con ${checkLimit})

                # Verifica si el tráfico superó el límite
                if [[ ${Usage} -gt ${checkLimit} ]]; then
                    exp=$(grep -w "^### $user" "/etc/xray/config.json" | cut -d ' ' -f 3 | sort | uniq)
                    sed -i "/^### $user $exp/,/^},{/d" /etc/xray/config.json
                    sed -i "/^### $user $exp/d" /etc/vmess/.vmess.db
                    send-log
                    rm -rf /etc/limit/vmess/${user}
                    rm -f /etc/kyt/limit/vmess/ip/$user
                    rm -f /etc/vmess/$user
                    rm -f /etc/limit/vmess/$user
                    rm -f /etc/limit/vmess/quota/$user
                    rm -f /var/www/html/vmess-$user.txt
                    systemctl restart xray >> /dev/null 2>&1
                fi
            fi
        fi
    done
done
